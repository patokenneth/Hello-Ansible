# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  destroy_environment:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: destroy infra
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1
  # configure_infrastructure:
  #     docker:
  #       - image: python:3.7-alpine3.11
  #     steps:
  #       - checkout
  #       - add_ssh_keys:
  #           fingerprints: ["a6:ac:9d:a4:01:ff:ca:b7:18:6a:76:3b:d7:28:29:15"]
  #       - run:
  #           name: install Ansible
  #           command: |
  #             apk add --update ansible
  #       - run:
  #           name: configure deployed server
  #           command: |
  #             ansible-playbook playbook.yml -i inventory.txt
  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run: apk add --update curl
        - run:
            name: smoke_test
            command: |
              URL="http://44.202.66.86"
              if curl -s --head ${URL}
              then
                return 1
              else
                return 0
              fi
        - destroy_environment


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  cloud-resource-workflow:
    jobs:
      - create_infrastructure
      - smoke_test
